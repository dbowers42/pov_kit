#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'pov_kit'

rescue LoadError
  STDERR.puts 'In development, you need to use `bundle exec bin/pov_kit` to run your app'
  STDERR.puts 'At install-time, RubyGems will make sure lib, etc. are in the load path'
  STDERR.puts 'Feel free to remove this message from bin/pov_kit now'
  exit 64
end

include GLI::App

program_desc 'Describe your application here'

version PovKit::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Describe some switch here'
switch [:a,:append]


desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f, :file]
flag [:l, :local]
flag [:g, :global]

desc 'Describe generate here'
arg_name 'Describe arguments to generate here'
command :generate do |c|
  c.desc 'Describe a switch to generate'
  c.switch :a

  c.desc 'Describe a flag to generate'
  c.default_value 'default'
  c.flag :f

  c.action do |global_options, options, args|
    context = {
        global_options: global_options,
        options: options,
        args: args
    }

    is_local = !!global_options[:local]
    asset = args.first
    name = global_options[:local] || global_options[:global] || ''
    params = args[1..-1]
    p PovKit::Generator.new.send(asset, is_local, name, *params)
  end
end

pre do |_global, _command, _options, _args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |_global, _command, _options, _args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |_exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
